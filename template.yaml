AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Parameters:
  EnvironmentName:
    Type: String
  ReferenceDataServiceStackName:
    Type: String
    Default: 3beepReferenceDataService
  SettingsServiceStackName:
    Type: String
    Default: 3beepSettingsService
  S3Bucket:
    Type: String
  Auth0Domain:
    Type: String
  Auth0ClientID:
    Type: String
  GraphQLSchemaFileName:
    Type: String
  ApiKeyExpires:
    Type: Number
Conditions:
  IsProductionEnvironment:
    'Fn::Equals':
      - Ref: EnvironmentName
      - Prod
Resources:
  SupportApiRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: SupportApiPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: '*'
                Resource: '*'
  GraphQLApi:
    Type: 'AWS::AppSync::GraphQLApi'
    Properties:
      Name:
        'Fn::Sub': '${EnvironmentName}3beepSupportApi'
      AuthenticationType: OPENID_CONNECT
      OpenIDConnectConfig:
        Issuer:
          'Fn::Sub': '${Auth0Domain}'
        ClientId:
          'Fn::Sub': '${Auth0ClientID}'
      AdditionalAuthenticationProviders:
        - AuthenticationType: API_KEY
      LogConfig:
        CloudWatchLogsRoleArn:
          'Fn::GetAtt': SupportApiRole.Arn
        ExcludeVerboseContent: false
        FieldLogLevel:
          'Fn::If':
            - IsProductionEnvironment
            - ERROR
            - ALL
      XrayEnabled: false
  GraphQLSchema:
    Type: 'AWS::AppSync::GraphQLSchema'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      DefinitionS3Location:
        'Fn::Sub': 's3://${S3Bucket}/${GraphQLSchemaFileName}'
  ApiKey:
    Type: 'AWS::AppSync::ApiKey'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Expires:
        Ref: ApiKeyExpires

  CreateCountryDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}CreateCountry'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}CreateCountryARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  CreateCountryResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: createCountry
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': CreateCountryDataSource.Name
  DeleteCountriesDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}DeleteCountries'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}DeleteCountriesARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  DeleteCountriesResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: deleteCountries
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': DeleteCountriesDataSource.Name
  GetCountriesDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetCountries'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}GetCountriesARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  GetCountriesResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getCountries
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetCountriesDataSource.Name
  GetArchivedCountriesDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetArchivedCountries'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}GetArchivedCountriesARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  GetArchivedCountriesResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getArchivedCountries
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetArchivedCountriesDataSource.Name
  GetCountryDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetCountry'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}GetCountryARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  GetCountryResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getCountryById
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetCountryDataSource.Name
  RestoreDeletedCountriesDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}RestoreDeletedCountries'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}RestoreDeletedCountriesARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  RestoreDeletedCountriesResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: restoreDeletedCountries
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': RestoreDeletedCountriesDataSource.Name
  UpdateCountryDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}UpdateCountry'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}UpdateCountryARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  UpdateCountryResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: updateCountry
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': UpdateCountryDataSource.Name

  CreateCurrencyDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}CreateCurrency'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}CreateCurrencyARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  CreateCurrencyResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: createCurrency
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': CreateCurrencyDataSource.Name
  DeleteCurrenciesDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}DeleteCurrencies'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}DeleteCurrenciesARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  DeleteCurrenciesResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: deleteCurrencies
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': DeleteCurrenciesDataSource.Name
  GetCurrenciesDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetCurrencies'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}GetCurrenciesARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  GetCurrenciesResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getCurrencies
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetCurrenciesDataSource.Name
  GetArchivedCurrenciesDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetArchivedCurrencies'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}GetArchivedCurrenciesARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  GetArchivedCurrenciesResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getArchivedCurrencies
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetArchivedCurrenciesDataSource.Name
  GetCurrencyDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetCurrency'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}GetCurrencyARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  GetCurrencyResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getCurrencyById
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetCurrencyDataSource.Name
  RestoreDeletedCurrenciesDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}RestoreDeletedCurrencies'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}RestoreDeletedCurrenciesARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  RestoreDeletedCurrenciesResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: restoreDeletedCurrencies
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': RestoreDeletedCurrenciesDataSource.Name
  UpdateCurrencyDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}UpdateCurrency'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}UpdateCurrencyARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  UpdateCurrencyResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: updateCurrency
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': UpdateCurrencyDataSource.Name

  CreateGenderDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}CreateGender'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}CreateGenderARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  CreateGenderResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: createGender
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': CreateGenderDataSource.Name
  DeleteGendersDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}DeleteGenders'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}DeleteGendersARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  DeleteGendersResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: deleteGenders
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': DeleteGendersDataSource.Name
  GetGendersDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetGenders'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}GetGendersARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  GetGendersResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getGenders
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetGendersDataSource.Name
  GetArchivedGendersDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetArchivedGenders'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}GetArchivedGendersARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  GetArchivedGendersResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getArchivedGenders
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetArchivedGendersDataSource.Name
  GetGenderDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetGender'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}GetGenderARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  GetGenderResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getGenderById
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetGenderDataSource.Name
  RestoreDeletedGendersDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}RestoreDeletedGenders'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}RestoreDeletedGendersARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  RestoreDeletedGendersResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: restoreDeletedGenders
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': RestoreDeletedGendersDataSource.Name
  UpdateGenderDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}UpdateGender'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}UpdateGenderARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  UpdateGenderResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: updateGender
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': UpdateGenderDataSource.Name

  CreateLocationDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}CreateLocation'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}CreateLocationARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  CreateLocationResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: createLocation
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': CreateLocationDataSource.Name
  DeleteLocationsDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}DeleteLocations'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}DeleteLocationsARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  DeleteLocationsResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: deleteLocations
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': DeleteLocationsDataSource.Name
  GetLocationsDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetLocations'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}GetLocationsARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  GetLocationsResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getLocations
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetLocationsDataSource.Name
  GetArchivedLocationsDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetArchivedLocations'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}GetArchivedLocationsARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  GetArchivedLocationsResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getArchivedLocations
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetArchivedLocationsDataSource.Name
  GetCountryLocationsDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetCountryLocations'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}GetCountryLocationsARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  GetCountryLocationsResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getLocationsByCountryId
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetCountryLocationsDataSource.Name
  GetLocationDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetLocation'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}GetLocationARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  GetLocationResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getLocationById
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetLocationDataSource.Name
  RestoreDeletedLocationsDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}RestoreDeletedLocations'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}RestoreDeletedLocationsARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  RestoreDeletedLocationsResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: restoreDeletedLocations
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': RestoreDeletedLocationsDataSource.Name
  UpdateLocationDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}UpdateLocation'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}UpdateLocationARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  UpdateLocationResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: updateLocation
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': UpdateLocationDataSource.Name

  GetTimezoneByIdDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetTimezoneById'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}GetTimezoneByIdARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  GetTimezoneByIdResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getTimezoneById
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetTimezoneByIdDataSource.Name
  GetTimezonesDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetTimezones'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}GetTimezonesARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  GetTimezonesResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getTimezones
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetTimezonesDataSource.Name
  SearchTimezonesDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}SearchTimezones'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}SearchTimezonesARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  SearchTimezonesResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: searchTimezones
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': SearchTimezonesDataSource.Name

  CreateOrganizationSettingsDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}CreateOrganizationSettings'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${SettingsServiceStackName}:${EnvironmentName}CreateOrganizationSettingsARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  CreateOrganizationSettingsResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: createOrganizationSettings
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': CreateOrganizationSettingsDataSource.Name
  CreateOrganizationSettingsCountryByIdResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: country
      TypeName: CreateOrganizationSettingsOutput
      DataSourceName:
        'Fn::GetAtt': GetCountryDataSource.Name
      RequestMappingTemplate: |
        {
           "version": "2017-02-28",
           "operation": "Invoke",
           "payload": {
              "arguments": $util.toJson($context.source)
           }
        }
  CreateOrganizationSettingsLocationByIdResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: location
      TypeName: CreateOrganizationSettingsOutput
      DataSourceName:
        'Fn::GetAtt': GetLocationDataSource.Name
      RequestMappingTemplate: |
        {
           "version": "2017-02-28",
           "operation": "Invoke",
           "payload": {
              "arguments": $util.toJson($context.source)
           }
        }
  CreateOrganizationSettingsTimezoneByIdResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: timezone
      TypeName: CreateOrganizationSettingsOutput
      DataSourceName:
        'Fn::GetAtt': GetTimezoneByIdDataSource.Name
      RequestMappingTemplate: |
        {
           "version": "2017-02-28",
           "operation": "Invoke",
           "payload": {
              "arguments": $util.toJson($context.source)
           }
        }
  DeleteOrganizationSettingsDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}DeleteOrganizationSettings'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${SettingsServiceStackName}:${EnvironmentName}DeleteOrganizationSettingsARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  DeleteOrganizationSettingsResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: deleteOrganizationSettings
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': DeleteOrganizationSettingsDataSource.Name
  GetOrganizationSettingsDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetOrganizationSettings'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${SettingsServiceStackName}:${EnvironmentName}GetOrganizationSettingsARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  GetOrganizationSettingsResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getOrganizationSettingsById
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetOrganizationSettingsDataSource.Name
  GetOrganizationSettingsCountryByIdResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: country
      TypeName: GetOrganizationSettingsByIdOutput
      DataSourceName:
        'Fn::GetAtt': GetCountryDataSource.Name
      RequestMappingTemplate: |
        {
           "version": "2017-02-28",
           "operation": "Invoke",
           "payload": {
              "arguments": $util.toJson($context.source)
           }
        }
  GetOrganizationSettingsLocationByIdResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: location
      TypeName: GetOrganizationSettingsByIdOutput
      DataSourceName:
        'Fn::GetAtt': GetLocationDataSource.Name
      RequestMappingTemplate: |
        {
           "version": "2017-02-28",
           "operation": "Invoke",
           "payload": {
              "arguments": $util.toJson($context.source)
           }
        }
  GetOrganizationSettingsTimezoneByIdResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: timezone
      TypeName: GetOrganizationSettingsByIdOutput
      DataSourceName:
        'Fn::GetAtt': GetTimezoneByIdDataSource.Name
      RequestMappingTemplate: |
        {
           "version": "2017-02-28",
           "operation": "Invoke",
           "payload": {
              "arguments": $util.toJson($context.source)
           }
        }
  UpdateOrganizationSettingsDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}UpdateOrganizationSettings'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${SettingsServiceStackName}:${EnvironmentName}UpdateOrganizationSettingsARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  UpdateOrganizationSettingsResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: updateOrganizationSettings
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': UpdateOrganizationSettingsDataSource.Name
  UpdateOrganizationSettingsCountryByIdResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: country
      TypeName: UpdateOrganizationSettingsOutput
      DataSourceName:
        'Fn::GetAtt': GetCountryDataSource.Name
      RequestMappingTemplate: |
        {
           "version": "2017-02-28",
           "operation": "Invoke",
           "payload": {
              "arguments": $util.toJson($context.source)
           }
        }
  UpdateOrganizationSettingsLocationByIdResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: location
      TypeName: UpdateOrganizationSettingsOutput
      DataSourceName:
        'Fn::GetAtt': GetLocationDataSource.Name
      RequestMappingTemplate: |
        {
           "version": "2017-02-28",
           "operation": "Invoke",
           "payload": {
              "arguments": $util.toJson($context.source)
           }
        }
  UpdateOrganizationSettingsTimezoneByIdResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: timezone
      TypeName: UpdateOrganizationSettingsOutput
      DataSourceName:
        'Fn::GetAtt': GetTimezoneByIdDataSource.Name
      RequestMappingTemplate: |
        {
           "version": "2017-02-28",
           "operation": "Invoke",
           "payload": {
              "arguments": $util.toJson($context.source)
           }
        }
  RestoreDeletedOrganizationSettingsDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}RestoreDeletedOrganizationSettings'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${SettingsServiceStackName}:${EnvironmentName}RestoreDeletedOrganizationSettingsARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  RestoreDeletedOrganizationSettingsResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: restoreDeletedOrganizationSettings
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': RestoreDeletedOrganizationSettingsDataSource.Name

  GetFacebookPagesDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetFacebookPages'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${SettingsServiceStackName}:${EnvironmentName}GetFacebookPagesARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  GetFacebookPagesResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getFacebookPages
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetFacebookPagesDataSource.Name

  CreateChannelDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}CreateChannel'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${SettingsServiceStackName}:${EnvironmentName}CreateChannelARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  CreateChannelResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: createChannel
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': CreateChannelDataSource.Name
  CreateChannelOrganizationsByIdsResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: organizations
      TypeName: CreateChannelOutput
      DataSourceName:
        'Fn::GetAtt': GetOrganizationsByIdsDataSource.Name
      RequestMappingTemplate: |
        {
           "version": "2017-02-28",
           "operation": "Invoke",
           "payload": {
              "arguments": $util.toJson($context.source)
           }
        }
  CreateChannelChannelStatusResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: channelStatus
      TypeName: CreateChannelOutput
      DataSourceName:
        'Fn::GetAtt': GetChannelStatusDataSource.Name
      RequestMappingTemplate: |
        {
           "version": "2017-02-28",
           "operation": "Invoke",
           "payload": {
              "arguments": $util.toJson($context.source)
           }
        }
  CreateChannelChannelTypeResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: channelType
      TypeName: CreateChannelOutput
      DataSourceName:
        'Fn::GetAtt': GetChannelTypeDataSource.Name
      RequestMappingTemplate: |
        {
           "version": "2017-02-28",
           "operation": "Invoke",
           "payload": {
              "arguments": $util.toJson($context.source)
           }
        }
  UpdateChannelDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}UpdateChannel'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${SettingsServiceStackName}:${EnvironmentName}UpdateChannelARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  UpdateChannelResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: updateChannel
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': UpdateChannelDataSource.Name
  UpdateChannelOrganizationsByIdsResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: organizations
      TypeName: UpdateChannelOutput
      DataSourceName:
        'Fn::GetAtt': GetOrganizationsByIdsDataSource.Name
      RequestMappingTemplate: |
        {
           "version": "2017-02-28",
           "operation": "Invoke",
           "payload": {
              "arguments": $util.toJson($context.source)
           }
        }
  UpdateChannelChannelStatusResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: channelStatus
      TypeName: UpdateChannelOutput
      DataSourceName:
        'Fn::GetAtt': GetChannelStatusDataSource.Name
      RequestMappingTemplate: |
        {
           "version": "2017-02-28",
           "operation": "Invoke",
           "payload": {
              "arguments": $util.toJson($context.source)
           }
        }
  UpdateChannelChannelTypeResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: channelType
      TypeName: UpdateChannelOutput
      DataSourceName:
        'Fn::GetAtt': GetChannelTypeDataSource.Name
      RequestMappingTemplate: |
        {
           "version": "2017-02-28",
           "operation": "Invoke",
           "payload": {
              "arguments": $util.toJson($context.source)
           }
        }
  GetChannelDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetChannel'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${SettingsServiceStackName}:${EnvironmentName}GetChannelARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  GetChannelResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getChannel
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetChannelDataSource.Name
  GetChannelOrganizationsByIdsResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: organizations
      TypeName: GetChannelOutput
      DataSourceName:
        'Fn::GetAtt': GetOrganizationsByIdsDataSource.Name
      RequestMappingTemplate: |
        {
           "version": "2017-02-28",
           "operation": "Invoke",
           "payload": {
              "arguments": $util.toJson($context.source)
           }
        }
  GetChannelsDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetChannels'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${SettingsServiceStackName}:${EnvironmentName}GetChannelsARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  GetChannelsResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getChannels
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetChannelsDataSource.Name
  GetChannelsOrganizationsByIdsResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: organizations
      TypeName: GetChannelsOutput
      DataSourceName:
        'Fn::GetAtt': GetOrganizationsByIdsDataSource.Name
      RequestMappingTemplate: |
        {
           "version": "2017-02-28",
           "operation": "Invoke",
           "payload": {
              "arguments": $util.toJson($context.source)
            }
        }

  CreateOrganizationDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}CreateOrganization'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${SettingsServiceStackName}:${EnvironmentName}CreateOrganizationARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  CreateOrganizationResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: createOrganization
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': CreateOrganizationDataSource.Name
  CreateOrganizationDepartmentDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}CreateOrganizationDepartment'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${SettingsServiceStackName}:${EnvironmentName}CreateOrganizationDepartmentARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  CreateOrganizationDepartmentResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: createOrganizationDepartment
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': CreateOrganizationDepartmentDataSource.Name
  DeleteOrganizationsDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}DeleteOrganizations'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${SettingsServiceStackName}:${EnvironmentName}DeleteOrganizationsARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  DeleteOrganizationsResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: deleteOrganizations
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': DeleteOrganizationsDataSource.Name
  GetAllArchivedOrganizationDepartmentsDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetAllArchivedOrganizationDepartments'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${SettingsServiceStackName}:${EnvironmentName}GetAllArchivedOrganizationDepartmentsARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  GetAllArchivedOrganizationDepartmentsResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getAllArchivedOrganizationDepartments
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetAllArchivedOrganizationDepartmentsDataSource.Name
  GetAllOrganizationDepartmentsDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetAllOrganizationDepartments'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${SettingsServiceStackName}:${EnvironmentName}GetAllOrganizationDepartmentsARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  GetAllOrganizationDepartmentsResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getAllOrganizationDepartments
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetAllOrganizationDepartmentsDataSource.Name
  GetArchivedOrganizationDepartmentsByIdDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetArchivedOrganizationDepartmentsById'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${SettingsServiceStackName}:${EnvironmentName}GetArchivedOrganizationDepartmentsByIdARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  GetArchivedOrganizationDepartmentsByIdResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getArchivedOrganizationDepartmentsById
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetArchivedOrganizationDepartmentsByIdDataSource.Name
  GetOrganizationByIdDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetOrganizationById'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${SettingsServiceStackName}:${EnvironmentName}GetOrganizationByIdARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  GetOrganizationByIdResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getOrganizationById
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetOrganizationByIdDataSource.Name
  GetOrganizationDepartmentsByIdDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetOrganizationDepartmentsById'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${SettingsServiceStackName}:${EnvironmentName}GetOrganizationDepartmentsByIdARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  GetOrganizationDepartmentsByIdResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getOrganizationDepartmentsById
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetOrganizationDepartmentsByIdDataSource.Name
  GetOrganizationsByIdsDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetOrganizationsByIds'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${SettingsServiceStackName}:${EnvironmentName}GetOrganizationsByIdsARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  GetOrganizationsByIdsResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getOrganizationsByIds
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetOrganizationsByIdsDataSource.Name
  RestoreDeletedOrganizationsDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}RestoreDeletedOrganizations'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${SettingsServiceStackName}:${EnvironmentName}RestoreDeletedOrganizationsARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  RestoreDeletedOrganizationsResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: restoreDeletedOrganizations
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': RestoreDeletedOrganizationsDataSource.Name
  UpdateOrganizationNameDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}UpdateOrganizationName'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${SettingsServiceStackName}:${EnvironmentName}UpdateOrganizationNameARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  UpdateOrganizationNameResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: updateOrganizationName
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': UpdateOrganizationNameDataSource.Name

  CreateChannelTypeDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}CreateChannelType'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}CreateChannelTypeARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  CreateChannelTypeResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: createChannelType
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': CreateChannelTypeDataSource.Name
  DeleteChannelTypesDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}DeleteChannelTypes'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}DeleteChannelTypesARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  DeleteChannelTypesResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: deleteChannelTypes
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': DeleteChannelTypesDataSource.Name
  GetChannelTypesDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetChannelTypes'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}GetChannelTypesARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  GetChannelTypesResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getChannelTypes
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetChannelTypesDataSource.Name
  GetArchivedChannelTypesDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetArchivedChannelTypes'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}GetArchivedChannelTypesARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  GetArchivedChannelTypesResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getArchivedChannelTypes
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetArchivedChannelTypesDataSource.Name
  GetChannelTypeDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetChannelType'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}GetChannelTypeARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  GetChannelTypeResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getChannelTypeById
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetChannelTypeDataSource.Name
  RestoreDeletedChannelTypesDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}RestoreDeletedChannelTypes'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}RestoreDeletedChannelTypesARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  RestoreDeletedChannelTypesResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: restoreDeletedChannelTypes
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': RestoreDeletedChannelTypesDataSource.Name
  UpdateChannelTypeDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}UpdateChannelType'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}UpdateChannelTypeARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  UpdateChannelTypeResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: updateChannelType
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': UpdateChannelTypeDataSource.Name

  CreateChannelStatusDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}CreateChannelStatus'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}CreateChannelStatusARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  CreateChannelStatusResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: createChannelStatus
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': CreateChannelStatusDataSource.Name
  DeleteChannelStatusesDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}DeleteChannelStatuses'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}DeleteChannelStatusesARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  DeleteChannelStatusesResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: deleteChannelStatuses
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': DeleteChannelStatusesDataSource.Name
  GetChannelStatusesDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetChannelStatuses'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}GetChannelStatusesARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  GetChannelStatusesResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getChannelStatuses
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetChannelStatusesDataSource.Name
  GetArchivedChannelStatusesDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetArchivedChannelStatuses'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}GetArchivedChannelStatusesARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  GetArchivedChannelStatusesResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getArchivedChannelStatuses
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetArchivedChannelStatusesDataSource.Name
  GetChannelStatusDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetChannelStatus'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}GetChannelStatusARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  GetChannelStatusResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getChannelStatusById
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetChannelStatusDataSource.Name
  RestoreDeletedChannelStatusesDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}RestoreDeletedChannelStatuses'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}RestoreDeletedChannelStatusesARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  RestoreDeletedChannelStatusesResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: restoreDeletedChannelStatuses
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': RestoreDeletedChannelStatusesDataSource.Name
  UpdateChannelStatusDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}UpdateChannelStatus'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}UpdateChannelStatusARN
      ServiceRoleArn:
        'Fn::GetAtt': SupportApiRole.Arn
  UpdateChannelStatusResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: updateChannelStatus
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': UpdateChannelStatusDataSource.Name
