AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Parameters:
  EnvironmentName:
    Type: String
  ReferenceDataServiceStackName:
    Type: String
    Default: 3beepReferenceDataService
  SettingsServiceStackName:
    Type: String
    Default: 3beepSettingsService
  S3Bucket:
    Type: String
  Auth0Domain:
    Type: String
  Auth0ClientID:
    Type: String
  GraphQLSchemaFileName:
    Type: String
  ApiKeyExpires:
    Type: Number
Conditions:
  IsProductionEnvironment:
    'Fn::Equals':
      - Ref: EnvironmentName
      - Prod
Resources:
  CloudWatchLogsRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: CloudWatchLogsAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: '*'
  GraphQLApi:
    Type: 'AWS::AppSync::GraphQLApi'
    Properties:
      Name:
        'Fn::Sub': '${EnvironmentName}3beepSupportApi'
      AuthenticationType: OPENID_CONNECT
      OpenIDConnectConfig:
        Issuer:
          'Fn::Sub': '${Auth0Domain}'
        ClientId:
          'Fn::Sub': '${Auth0ClientID}'
      AdditionalAuthenticationProviders:
        - AuthenticationType: API_KEY
      LogConfig:
        CloudWatchLogsRoleArn:
          'Fn::GetAtt': CloudWatchLogsRole.Arn
        ExcludeVerboseContent: false
        FieldLogLevel:
          'Fn::If':
            - IsProductionEnvironment
            - ERROR
            - ALL
      XrayEnabled: false
  GraphQLSchema:
    Type: 'AWS::AppSync::GraphQLSchema'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      DefinitionS3Location:
        'Fn::Sub': 's3://${S3Bucket}/${GraphQLSchemaFileName}'
  ApiKey:
    Type: 'AWS::AppSync::ApiKey'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Expires:
        Ref: ApiKeyExpires

  CreateCountryRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: CreateCountryFunctionAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'lambda:InvokeFunction'
                Resource:
                  'Fn::ImportValue':
                    'Fn::Sub': >-
                      ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}CreateCountryARN
  CreateCountryDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}CreateCountry'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}CreateCountryARN
      ServiceRoleArn:
        'Fn::GetAtt': CreateCountryRole.Arn
  CreateCountryResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: createCountry
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': CreateCountryDataSource.Name
  DeleteCountriesRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: DeleteCountriesFunctionAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'lambda:InvokeFunction'
                Resource:
                  'Fn::ImportValue':
                    'Fn::Sub': >-
                      ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}DeleteCountriesARN
  DeleteCountriesDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}DeleteCountries'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}DeleteCountriesARN
      ServiceRoleArn:
        'Fn::GetAtt': DeleteCountriesRole.Arn
  DeleteCountriesResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: deleteCountries
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': DeleteCountriesDataSource.Name
  GetCountriesRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: GetCountriesFunctionAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'lambda:InvokeFunction'
                Resource:
                  'Fn::ImportValue':
                    'Fn::Sub': >-
                      ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}GetCountriesARN
  GetCountriesDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetCountries'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}GetCountriesARN
      ServiceRoleArn:
        'Fn::GetAtt': GetCountriesRole.Arn
  GetCountriesResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getCountries
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetCountriesDataSource.Name
  GetArchivedCountriesRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: GetArchivedCountriesFunctionAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'lambda:InvokeFunction'
                Resource:
                  'Fn::ImportValue':
                    'Fn::Sub': >-
                      ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}GetArchivedCountriesARN
  GetArchivedCountriesDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetArchivedCountries'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}GetArchivedCountriesARN
      ServiceRoleArn:
        'Fn::GetAtt': GetArchivedCountriesRole.Arn
  GetArchivedCountriesResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getArchivedCountries
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetArchivedCountriesDataSource.Name
  GetCountryRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: GetCountryFunctionAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'lambda:InvokeFunction'
                Resource:
                  'Fn::ImportValue':
                    'Fn::Sub': >-
                      ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}GetCountryARN
  GetCountryDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetCountry'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}GetCountryARN
      ServiceRoleArn:
        'Fn::GetAtt': GetCountryRole.Arn
  GetCountryResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getCountryById
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetCountryDataSource.Name
  RestoreDeletedCountriesRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: RestoreDeletedCountriesFunctionAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'lambda:InvokeFunction'
                Resource:
                  'Fn::ImportValue':
                    'Fn::Sub': >-
                      ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}RestoreDeletedCountriesARN
  RestoreDeletedCountriesDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}RestoreDeletedCountries'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}RestoreDeletedCountriesARN
      ServiceRoleArn:
        'Fn::GetAtt': RestoreDeletedCountriesRole.Arn
  RestoreDeletedCountriesResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: restoreDeletedCountries
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': RestoreDeletedCountriesDataSource.Name
  UpdateCountryRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: UpdateCountryFunctionAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'lambda:InvokeFunction'
                Resource:
                  'Fn::ImportValue':
                    'Fn::Sub': >-
                      ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}UpdateCountryARN
  UpdateCountryDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}UpdateCountry'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}UpdateCountryARN
      ServiceRoleArn:
        'Fn::GetAtt': UpdateCountryRole.Arn
  UpdateCountryResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: updateCountry
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': UpdateCountryDataSource.Name

  CreateCurrencyRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: CreateCurrencyFunctionAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'lambda:InvokeFunction'
                Resource:
                  'Fn::ImportValue':
                    'Fn::Sub': >-
                      ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}CreateCurrencyARN
  CreateCurrencyDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}CreateCurrency'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}CreateCurrencyARN
      ServiceRoleArn:
        'Fn::GetAtt': CreateCurrencyRole.Arn
  CreateCurrencyResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: createCurrency
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': CreateCurrencyDataSource.Name
  DeleteCurrenciesRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: DeleteCurrenciesFunctionAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'lambda:InvokeFunction'
                Resource:
                  'Fn::ImportValue':
                    'Fn::Sub': >-
                      ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}DeleteCurrenciesARN
  DeleteCurrenciesDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}DeleteCurrencies'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}DeleteCurrenciesARN
      ServiceRoleArn:
        'Fn::GetAtt': DeleteCurrenciesRole.Arn
  DeleteCurrenciesResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: deleteCurrencies
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': DeleteCurrenciesDataSource.Name
  GetCurrenciesRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: GetCurrenciesFunctionAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'lambda:InvokeFunction'
                Resource:
                  'Fn::ImportValue':
                    'Fn::Sub': >-
                      ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}GetCurrenciesARN
  GetCurrenciesDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetCurrencies'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}GetCurrenciesARN
      ServiceRoleArn:
        'Fn::GetAtt': GetCurrenciesRole.Arn
  GetCurrenciesResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getCurrencies
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetCurrenciesDataSource.Name
  GetArchivedCurrenciesRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: GetArchivedCurrenciesFunctionAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'lambda:InvokeFunction'
                Resource:
                  'Fn::ImportValue':
                    'Fn::Sub': >-
                      ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}GetArchivedCurrenciesARN
  GetArchivedCurrenciesDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetArchivedCurrencies'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}GetArchivedCurrenciesARN
      ServiceRoleArn:
        'Fn::GetAtt': GetArchivedCurrenciesRole.Arn
  GetArchivedCurrenciesResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getArchivedCurrencies
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetArchivedCurrenciesDataSource.Name
  GetCurrencyRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: GetCurrencyFunctionAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'lambda:InvokeFunction'
                Resource:
                  'Fn::ImportValue':
                    'Fn::Sub': >-
                      ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}GetCurrencyARN
  GetCurrencyDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetCurrency'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}GetCurrencyARN
      ServiceRoleArn:
        'Fn::GetAtt': GetCurrencyRole.Arn
  GetCurrencyResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getCurrencyById
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetCurrencyDataSource.Name
  RestoreDeletedCurrenciesRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: RestoreDeletedCurrenciesFunctionAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'lambda:InvokeFunction'
                Resource:
                  'Fn::ImportValue':
                    'Fn::Sub': >-
                      ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}RestoreDeletedCurrenciesARN
  RestoreDeletedCurrenciesDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}RestoreDeletedCurrencies'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}RestoreDeletedCurrenciesARN
      ServiceRoleArn:
        'Fn::GetAtt': RestoreDeletedCurrenciesRole.Arn
  RestoreDeletedCurrenciesResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: restoreDeletedCurrencies
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': RestoreDeletedCurrenciesDataSource.Name
  UpdateCurrencyRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: UpdateCurrencyFunctionAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'lambda:InvokeFunction'
                Resource:
                  'Fn::ImportValue':
                    'Fn::Sub': >-
                      ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}UpdateCurrencyARN
  UpdateCurrencyDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}UpdateCurrency'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}UpdateCurrencyARN
      ServiceRoleArn:
        'Fn::GetAtt': UpdateCurrencyRole.Arn
  UpdateCurrencyResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: updateCurrency
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': UpdateCurrencyDataSource.Name

  CreateGenderRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: CreateGenderFunctionAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'lambda:InvokeFunction'
                Resource:
                  'Fn::ImportValue':
                    'Fn::Sub': >-
                      ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}CreateGenderARN
  CreateGenderDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}CreateGender'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}CreateGenderARN
      ServiceRoleArn:
        'Fn::GetAtt': CreateGenderRole.Arn
  CreateGenderResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: createGender
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': CreateGenderDataSource.Name
  DeleteGendersRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: DeleteGendersFunctionAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'lambda:InvokeFunction'
                Resource:
                  'Fn::ImportValue':
                    'Fn::Sub': >-
                      ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}DeleteGendersARN
  DeleteGendersDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}DeleteGenders'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}DeleteGendersARN
      ServiceRoleArn:
        'Fn::GetAtt': DeleteGendersRole.Arn
  DeleteGendersResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: deleteGenders
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': DeleteGendersDataSource.Name
  GetGendersRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: GetGendersFunctionAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'lambda:InvokeFunction'
                Resource:
                  'Fn::ImportValue':
                    'Fn::Sub': >-
                      ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}GetGendersARN
  GetGendersDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetGenders'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}GetGendersARN
      ServiceRoleArn:
        'Fn::GetAtt': GetGendersRole.Arn
  GetGendersResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getGenders
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetGendersDataSource.Name
  GetArchivedGendersRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: GetArchivedGendersFunctionAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'lambda:InvokeFunction'
                Resource:
                  'Fn::ImportValue':
                    'Fn::Sub': >-
                      ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}GetArchivedGendersARN
  GetArchivedGendersDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetArchivedGenders'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}GetArchivedGendersARN
      ServiceRoleArn:
        'Fn::GetAtt': GetArchivedGendersRole.Arn
  GetArchivedGendersResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getArchivedGenders
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetArchivedGendersDataSource.Name
  GetGenderRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: GetGenderFunctionAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'lambda:InvokeFunction'
                Resource:
                  'Fn::ImportValue':
                    'Fn::Sub': >-
                      ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}GetGenderARN
  GetGenderDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetGender'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}GetGenderARN
      ServiceRoleArn:
        'Fn::GetAtt': GetGenderRole.Arn
  GetGenderResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getGenderById
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetGenderDataSource.Name
  RestoreDeletedGendersRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: RestoreDeletedGendersFunctionAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'lambda:InvokeFunction'
                Resource:
                  'Fn::ImportValue':
                    'Fn::Sub': >-
                      ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}RestoreDeletedGendersARN
  RestoreDeletedGendersDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}RestoreDeletedGenders'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}RestoreDeletedGendersARN
      ServiceRoleArn:
        'Fn::GetAtt': RestoreDeletedGendersRole.Arn
  RestoreDeletedGendersResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: restoreDeletedGenders
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': RestoreDeletedGendersDataSource.Name
  UpdateGenderRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: UpdateGenderFunctionAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'lambda:InvokeFunction'
                Resource:
                  'Fn::ImportValue':
                    'Fn::Sub': >-
                      ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}UpdateGenderARN
  UpdateGenderDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}UpdateGender'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}UpdateGenderARN
      ServiceRoleArn:
        'Fn::GetAtt': UpdateGenderRole.Arn
  UpdateGenderResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: updateGender
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': UpdateGenderDataSource.Name

  CreateLocationRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: CreateLocationFunctionAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'lambda:InvokeFunction'
                Resource:
                  'Fn::ImportValue':
                    'Fn::Sub': >-
                      ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}CreateLocationARN
  CreateLocationDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}CreateLocation'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}CreateLocationARN
      ServiceRoleArn:
        'Fn::GetAtt': CreateLocationRole.Arn
  CreateLocationResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: createLocation
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': CreateLocationDataSource.Name
  DeleteLocationsRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: DeleteLocationsFunctionAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'lambda:InvokeFunction'
                Resource:
                  'Fn::ImportValue':
                    'Fn::Sub': >-
                      ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}DeleteLocationsARN
  DeleteLocationsDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}DeleteLocations'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}DeleteLocationsARN
      ServiceRoleArn:
        'Fn::GetAtt': DeleteLocationsRole.Arn
  DeleteLocationsResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: deleteLocations
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': DeleteLocationsDataSource.Name
  GetLocationsRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: GetLocationsFunctionAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'lambda:InvokeFunction'
                Resource:
                  'Fn::ImportValue':
                    'Fn::Sub': >-
                      ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}GetLocationsARN
  GetLocationsDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetLocations'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}GetLocationsARN
      ServiceRoleArn:
        'Fn::GetAtt': GetLocationsRole.Arn
  GetLocationsResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getLocations
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetLocationsDataSource.Name
  GetArchivedLocationsRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: GetArchivedLocationsFunctionAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'lambda:InvokeFunction'
                Resource:
                  'Fn::ImportValue':
                    'Fn::Sub': >-
                      ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}GetArchivedLocationsARN
  GetArchivedLocationsDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetArchivedLocations'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}GetArchivedLocationsARN
      ServiceRoleArn:
        'Fn::GetAtt': GetArchivedLocationsRole.Arn
  GetArchivedLocationsResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getArchivedLocations
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetArchivedLocationsDataSource.Name
  GetCountryLocationsRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: GetCountryLocationsFunctionAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'lambda:InvokeFunction'
                Resource:
                  'Fn::ImportValue':
                    'Fn::Sub': >-
                      ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}GetCountryLocationsARN
  GetCountryLocationsDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetCountryLocations'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}GetCountryLocationsARN
      ServiceRoleArn:
        'Fn::GetAtt': GetCountryLocationsRole.Arn
  GetCountryLocationsResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getLocationsByCountryId
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetCountryLocationsDataSource.Name
  GetLocationRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: GetLocationFunctionAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'lambda:InvokeFunction'
                Resource:
                  'Fn::ImportValue':
                    'Fn::Sub': >-
                      ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}GetLocationARN
  GetLocationDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetLocation'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}GetLocationARN
      ServiceRoleArn:
        'Fn::GetAtt': GetLocationRole.Arn
  GetLocationResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getLocationById
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetLocationDataSource.Name
  GetLocationCountryRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: GetLocationCountryFunctionAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'lambda:InvokeFunction'
                Resource:
                  'Fn::ImportValue':
                    'Fn::Sub': >-
                      ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}GetLocationCountryARN
  GetLocationCountryDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetLocationCountry'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}GetLocationCountryARN
      ServiceRoleArn:
        'Fn::GetAtt': GetLocationCountryRole.Arn
  GetLocationCountryResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: country
      TypeName: GetLocationByIdOutput
      DataSourceName:
        'Fn::GetAtt': GetLocationCountryDataSource.Name
  RestoreDeletedLocationsRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: RestoreDeletedLocationsFunctionAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'lambda:InvokeFunction'
                Resource:
                  'Fn::ImportValue':
                    'Fn::Sub': >-
                      ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}RestoreDeletedLocationsARN
  RestoreDeletedLocationsDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}RestoreDeletedLocations'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}RestoreDeletedLocationsARN
      ServiceRoleArn:
        'Fn::GetAtt': RestoreDeletedLocationsRole.Arn
  RestoreDeletedLocationsResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: restoreDeletedLocations
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': RestoreDeletedLocationsDataSource.Name
  UpdateLocationRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: UpdateLocationFunctionAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'lambda:InvokeFunction'
                Resource:
                  'Fn::ImportValue':
                    'Fn::Sub': >-
                      ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}UpdateLocationARN
  UpdateLocationDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}UpdateLocation'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}UpdateLocationARN
      ServiceRoleArn:
        'Fn::GetAtt': UpdateLocationRole.Arn
  UpdateLocationResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: updateLocation
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': UpdateLocationDataSource.Name

  GetTimezoneByIdRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: GetTimezoneByIdFunctionAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'lambda:InvokeFunction'
                Resource:
                  'Fn::ImportValue':
                    'Fn::Sub': >-
                      ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}GetTimezoneByIdARN
  GetTimezoneByIdDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetTimezoneById'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}GetTimezoneByIdARN
      ServiceRoleArn:
        'Fn::GetAtt': GetTimezoneByIdRole.Arn
  GetTimezoneByIdResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getTimezoneById
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetTimezoneByIdDataSource.Name
  GetTimezonesRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: GetTimezonesFunctionAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'lambda:InvokeFunction'
                Resource:
                  'Fn::ImportValue':
                    'Fn::Sub': >-
                      ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}GetTimezonesARN
  GetTimezonesDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetTimezones'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}GetTimezonesARN
      ServiceRoleArn:
        'Fn::GetAtt': GetTimezonesRole.Arn
  GetTimezonesResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getTimezones
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetTimezonesDataSource.Name
  SearchTimezonesRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: SearchTimezonesFunctionAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'lambda:InvokeFunction'
                Resource:
                  'Fn::ImportValue':
                    'Fn::Sub': >-
                      ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}SearchTimezonesARN
  SearchTimezonesDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}SearchTimezones'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${ReferenceDataServiceStackName}:${EnvironmentName}SearchTimezonesARN
      ServiceRoleArn:
        'Fn::GetAtt': SearchTimezonesRole.Arn
  SearchTimezonesResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: searchTimezones
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': SearchTimezonesDataSource.Name

  CreateOrganizationSettingsRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: CreateOrganizationSettingsFunctionAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'lambda:InvokeFunction'
                Resource:
                  'Fn::ImportValue':
                    'Fn::Sub': >-
                      ${EnvironmentName}${SettingsServiceStackName}:${EnvironmentName}CreateOrganizationSettingsARN
  CreateOrganizationSettingsDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}CreateOrganizationSettings'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${SettingsServiceStackName}:${EnvironmentName}CreateOrganizationSettingsARN
      ServiceRoleArn:
        'Fn::GetAtt': CreateOrganizationSettingsRole.Arn
  CreateOrganizationSettingsResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: createOrganizationSettings
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': CreateOrganizationSettingsDataSource.Name
  CreateOrganizationSettingsCountryByIdResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: country
      TypeName: CreateOrganizationSettingsOutput
      DataSourceName:
        'Fn::GetAtt': GetCountryDataSource.Name
      RequestMappingTemplate: |
        {
           "version":"2017-02-28",
           "operation":"Invoke",
           "payload":{
              "arguments":"$util.toJson($context.source)"
           }
        }
  CreateOrganizationSettingsLocationByIdResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: location
      TypeName: CreateOrganizationSettingsOutput
      DataSourceName:
        'Fn::GetAtt': GetLocationDataSource.Name
      RequestMappingTemplate: |
        {
           "version":"2017-02-28",
           "operation":"Invoke",
           "payload":{
              "arguments":"$util.toJson($context.source)"
           }
        }
  CreateOrganizationSettingsTimezoneByIdResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: timezone
      TypeName: CreateOrganizationSettingsOutput
      DataSourceName:
        'Fn::GetAtt': GetTimezoneByIdDataSource.Name
      RequestMappingTemplate: |
        {
           "version":"2017-02-28",
           "operation":"Invoke",
           "payload":{
              "arguments":"$util.toJson($context.source)"
           }
        }
  DeleteOrganizationSettingsRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: DeleteOrganizationSettingsFunctionAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'lambda:InvokeFunction'
                Resource:
                  'Fn::ImportValue':
                    'Fn::Sub': >-
                      ${EnvironmentName}${SettingsServiceStackName}:${EnvironmentName}DeleteOrganizationSettingsARN
  DeleteOrganizationSettingsDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}DeleteOrganizationSettings'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${SettingsServiceStackName}:${EnvironmentName}DeleteOrganizationSettingsARN
      ServiceRoleArn:
        'Fn::GetAtt': DeleteOrganizationSettingsRole.Arn
  DeleteOrganizationSettingsResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: deleteOrganizationSettings
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': DeleteOrganizationSettingsDataSource.Name
  GetOrganizationSettingsRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: GetOrganizationSettingsFunctionAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'lambda:InvokeFunction'
                Resource:
                  'Fn::ImportValue':
                    'Fn::Sub': >-
                      ${EnvironmentName}${SettingsServiceStackName}:${EnvironmentName}GetOrganizationSettingsARN
  GetOrganizationSettingsDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetOrganizationSettings'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${SettingsServiceStackName}:${EnvironmentName}GetOrganizationSettingsARN
      ServiceRoleArn:
        'Fn::GetAtt': GetOrganizationSettingsRole.Arn
  GetOrganizationSettingsResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getOrganizationSettingsById
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetOrganizationSettingsDataSource.Name
  GetOrganizationSettingsCountryByIdResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: country
      TypeName: GetOrganizationSettingsByIdOutput
      DataSourceName:
        'Fn::GetAtt': GetCountryDataSource.Name
      RequestMappingTemplate: |
        {
           "version":"2017-02-28",
           "operation":"Invoke",
           "payload":{
              "arguments":"$util.toJson($context.source)"
           }
        }
  GetOrganizationSettingsLocationByIdResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: location
      TypeName: GetOrganizationSettingsByIdOutput
      DataSourceName:
        'Fn::GetAtt': GetLocationDataSource.Name
      RequestMappingTemplate: |
        {
           "version":"2017-02-28",
           "operation":"Invoke",
           "payload":{
              "arguments":"$util.toJson($context.source)"
           }
        }
  GetOrganizationSettingsTimezoneByIdResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: timezone
      TypeName: GetOrganizationSettingsByIdOutput
      DataSourceName:
        'Fn::GetAtt': GetTimezoneByIdDataSource.Name
      RequestMappingTemplate: |
        {
           "version":"2017-02-28",
           "operation":"Invoke",
           "payload":{
              "arguments":"$util.toJson($context.source)"
           }
        }
  UpdateOrganizationSettingsRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: UpdateOrganizationSettingsFunctionAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'lambda:InvokeFunction'
                Resource:
                  'Fn::ImportValue':
                    'Fn::Sub': >-
                      ${EnvironmentName}${SettingsServiceStackName}:${EnvironmentName}UpdateOrganizationSettingsARN
  UpdateOrganizationSettingsDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}UpdateOrganizationSettings'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${SettingsServiceStackName}:${EnvironmentName}UpdateOrganizationSettingsARN
      ServiceRoleArn:
        'Fn::GetAtt': UpdateOrganizationSettingsRole.Arn
  UpdateOrganizationSettingsResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: updateOrganizationSettings
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': UpdateOrganizationSettingsDataSource.Name
  UpdateOrganizationSettingsCountryByIdResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: country
      TypeName: UpdateOrganizationSettingsOutput
      DataSourceName:
        'Fn::GetAtt': GetCountryDataSource.Name
      RequestMappingTemplate: |
        {
           "version":"2017-02-28",
           "operation":"Invoke",
           "payload":{
              "arguments":"$util.toJson($context.source)"
           }
        }
  UpdateOrganizationSettingsLocationByIdResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: location
      TypeName: UpdateOrganizationSettingsOutput
      DataSourceName:
        'Fn::GetAtt': GetLocationDataSource.Name
      RequestMappingTemplate: |
        {
           "version":"2017-02-28",
           "operation":"Invoke",
           "payload":{
              "arguments":"$util.toJson($context.source)"
           }
        }
  UpdateOrganizationSettingsTimezoneByIdResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: timezone
      TypeName: UpdateOrganizationSettingsOutput
      DataSourceName:
        'Fn::GetAtt': GetTimezoneByIdDataSource.Name
      RequestMappingTemplate: |
        {
           "version":"2017-02-28",
           "operation":"Invoke",
           "payload":{
              "arguments":"$util.toJson($context.source)"
           }
        }
  RestoreDeletedOrganizationSettingsRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: RestoreDeletedOrganizationSettingsFunctionAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'lambda:InvokeFunction'
                Resource:
                  'Fn::ImportValue':
                    'Fn::Sub': >-
                      ${EnvironmentName}${SettingsServiceStackName}:${EnvironmentName}RestoreDeletedOrganizationSettingsARN
  RestoreDeletedOrganizationSettingsDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}RestoreDeletedOrganizationSettings'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${SettingsServiceStackName}:${EnvironmentName}RestoreDeletedOrganizationSettingsARN
      ServiceRoleArn:
        'Fn::GetAtt': RestoreDeletedOrganizationSettingsRole.Arn
  RestoreDeletedOrganizationSettingsResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: restoreDeletedOrganizationSettings
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': RestoreDeletedOrganizationSettingsDataSource.Name

  GetFacebookPagesRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: GetFacebookPagesFunctionAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'lambda:InvokeFunction'
                Resource:
                  'Fn::ImportValue':
                    'Fn::Sub': >-
                      ${EnvironmentName}${SettingsServiceStackName}:${EnvironmentName}GetFacebookPagesARN
  GetFacebookPagesDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetFacebookPages'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${SettingsServiceStackName}:${EnvironmentName}GetFacebookPagesARN
      ServiceRoleArn:
        'Fn::GetAtt': GetFacebookPagesRole.Arn
  GetFacebookPagesResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getFacebookPages
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetFacebookPagesDataSource.Name

  CreateChannelRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: CreateChannelFunctionAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'lambda:InvokeFunction'
                Resource:
                  'Fn::ImportValue':
                    'Fn::Sub': >-
                      ${EnvironmentName}${SettingsServiceStackName}:${EnvironmentName}CreateChannelARN
  CreateChannelDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}CreateChannel'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${SettingsServiceStackName}:${EnvironmentName}CreateChannelARN
      ServiceRoleArn:
        'Fn::GetAtt': CreateChannelRole.Arn
  CreateChannelResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: createChannel
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': CreateChannelDataSource.Name
  GetChannelRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: GetChannelFunctionAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'lambda:InvokeFunction'
                Resource:
                  'Fn::ImportValue':
                    'Fn::Sub': >-
                      ${EnvironmentName}${SettingsServiceStackName}:${EnvironmentName}GetChannelARN
  GetChannelDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetChannel'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${SettingsServiceStackName}:${EnvironmentName}GetChannelARN
      ServiceRoleArn:
        'Fn::GetAtt': GetChannelRole.Arn
  GetChannelResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getChannel
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetChannelDataSource.Name
  # GetChannelOrganizationsByIdsResolver:
    # Type: 'AWS::AppSync::Resolver'
    # Properties:
      # ApiId:
        # 'Fn::GetAtt': GraphQLApi.ApiId
      # FieldName: organizations
      # TypeName: OrganizationOutput
      # DataSourceName:
        # 'Fn::GetAtt': GetOrganizationsByIdsDataSource.Name
      # RequestMappingTemplate: |
        # {
           # "version":"2017-02-28",
           # "operation":"Invoke",
           # "payload":{
              # "arguments":"$util.toJson($context.source)"
           # }
        # }
  GetChannelsRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: GetChannelsFunctionAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'lambda:InvokeFunction'
                Resource:
                  'Fn::ImportValue':
                    'Fn::Sub': >-
                      ${EnvironmentName}${SettingsServiceStackName}:${EnvironmentName}GetChannelsARN
  GetChannelsDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetChannels'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${SettingsServiceStackName}:${EnvironmentName}GetChannelsARN
      ServiceRoleArn:
        'Fn::GetAtt': GetChannelsRole.Arn
  GetChannelsResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getChannels
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetChannelsDataSource.Name
  # GetChannelsOrganizationsByIdsResolver:
    # Type: 'AWS::AppSync::Resolver'
    # Properties:
      # ApiId:
        # 'Fn::GetAtt': GraphQLApi.ApiId
      # FieldName: organizations
      # TypeName: OrganizationOutput
      # DataSourceName:
        # 'Fn::GetAtt': GetOrganizationsByIdsDataSource.Name
      # RequestMappingTemplate: |
        # {
           # "version":"2017-02-28",
           # "operation":"Invoke",
           # "payload":{
              # "arguments":"$util.toJson($context.source)"
            # }
        # }

  DeleteOrganizationsRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: DeleteOrganizationsFunctionAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'lambda:InvokeFunction'
                Resource:
                  'Fn::ImportValue':
                    'Fn::Sub': >-
                      ${EnvironmentName}${SettingsServiceStackName}:${EnvironmentName}DeleteOrganizationsARN
  DeleteOrganizationsDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}DeleteOrganizations'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${SettingsServiceStackName}:${EnvironmentName}DeleteOrganizationsARN
      ServiceRoleArn:
        'Fn::GetAtt': DeleteOrganizationsRole.Arn
  DeleteOrganizationsResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: deleteOrganizations
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': DeleteOrganizationsDataSource.Name
  GetAllArchivedOrganizationDepartmentsRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: GetAllArchivedOrganizationDepartmentsFunctionAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'lambda:InvokeFunction'
                Resource:
                  'Fn::ImportValue':
                    'Fn::Sub': >-
                      ${EnvironmentName}${SettingsServiceStackName}:${EnvironmentName}GetAllArchivedOrganizationDepartmentsARN
  GetAllArchivedOrganizationDepartmentsDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetAllArchivedOrganizationDepartments'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${SettingsServiceStackName}:${EnvironmentName}GetAllArchivedOrganizationDepartmentsARN
      ServiceRoleArn:
        'Fn::GetAtt': GetAllArchivedOrganizationDepartmentsRole.Arn
  GetAllArchivedOrganizationDepartmentsResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getAllArchivedOrganizationDepartments
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetAllArchivedOrganizationDepartmentsDataSource.Name
  GetAllOrganizationDepartmentsRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: GetAllOrganizationDepartmentsFunctionAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'lambda:InvokeFunction'
                Resource:
                  'Fn::ImportValue':
                    'Fn::Sub': >-
                      ${EnvironmentName}${SettingsServiceStackName}:${EnvironmentName}GetAllOrganizationDepartmentsARN
  GetAllOrganizationDepartmentsDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetAllOrganizationDepartments'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${SettingsServiceStackName}:${EnvironmentName}GetAllOrganizationDepartmentsARN
      ServiceRoleArn:
        'Fn::GetAtt': GetAllOrganizationDepartmentsRole.Arn
  GetAllOrganizationDepartmentsResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getAllOrganizationDepartments
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetAllOrganizationDepartmentsDataSource.Name
  GetArchivedOrganizationDepartmentsByIdRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: GetArchivedOrganizationDepartmentsByIdFunctionAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'lambda:InvokeFunction'
                Resource:
                  'Fn::ImportValue':
                    'Fn::Sub': >-
                      ${EnvironmentName}${SettingsServiceStackName}:${EnvironmentName}GetArchivedOrganizationDepartmentsByIdARN
  GetArchivedOrganizationDepartmentsByIdDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetArchivedOrganizationDepartmentsById'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${SettingsServiceStackName}:${EnvironmentName}GetArchivedOrganizationDepartmentsByIdARN
      ServiceRoleArn:
        'Fn::GetAtt': GetArchivedOrganizationDepartmentsByIdRole.Arn
  GetArchivedOrganizationDepartmentsByIdResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getArchivedOrganizationDepartmentsById
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetArchivedOrganizationDepartmentsByIdDataSource.Name
  GetOrganizationByIdRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: GetOrganizationByIdFunctionAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'lambda:InvokeFunction'
                Resource:
                  'Fn::ImportValue':
                    'Fn::Sub': >-
                      ${EnvironmentName}${SettingsServiceStackName}:${EnvironmentName}GetOrganizationByIdARN
  GetOrganizationByIdDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetOrganizationById'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${SettingsServiceStackName}:${EnvironmentName}GetOrganizationByIdARN
      ServiceRoleArn:
        'Fn::GetAtt': GetOrganizationByIdRole.Arn
  GetOrganizationByIdResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getOrganizationById
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetOrganizationByIdDataSource.Name
  GetOrganizationDepartmentsByIdRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: GetOrganizationDepartmentsByIdFunctionAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'lambda:InvokeFunction'
                Resource:
                  'Fn::ImportValue':
                    'Fn::Sub': >-
                      ${EnvironmentName}${SettingsServiceStackName}:${EnvironmentName}GetOrganizationDepartmentsByIdARN
  GetOrganizationDepartmentsByIdDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetOrganizationDepartmentsById'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${SettingsServiceStackName}:${EnvironmentName}GetOrganizationDepartmentsByIdARN
      ServiceRoleArn:
        'Fn::GetAtt': GetOrganizationDepartmentsByIdRole.Arn
  GetOrganizationDepartmentsByIdResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getOrganizationDepartmentsById
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetOrganizationDepartmentsByIdDataSource.Name
  GetOrganizationsByIdsRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: GetOrganizationsByIdsFunctionAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'lambda:InvokeFunction'
                Resource:
                  'Fn::ImportValue':
                    'Fn::Sub': >-
                      ${EnvironmentName}${SettingsServiceStackName}:${EnvironmentName}GetOrganizationsByIdsARN
  GetOrganizationsByIdsDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}GetOrganizationsByIds'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${SettingsServiceStackName}:${EnvironmentName}GetOrganizationsByIdsARN
      ServiceRoleArn:
        'Fn::GetAtt': GetOrganizationsByIdsRole.Arn
  GetOrganizationsByIdsResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: getOrganizationsByIds
      TypeName: Query
      DataSourceName:
        'Fn::GetAtt': GetOrganizationsByIdsDataSource.Name
  RestoreDeletedOrganizationsRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: RestoreDeletedOrganizationsFunctionAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'lambda:InvokeFunction'
                Resource:
                  'Fn::ImportValue':
                    'Fn::Sub': >-
                      ${EnvironmentName}${SettingsServiceStackName}:${EnvironmentName}RestoreDeletedOrganizationsARN
  RestoreDeletedOrganizationsDataSource:
    Type: 'AWS::AppSync::DataSource'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      Name:
        'Fn::Sub': '${EnvironmentName}RestoreDeletedOrganizations'
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          'Fn::ImportValue':
            'Fn::Sub': >-
              ${EnvironmentName}${SettingsServiceStackName}:${EnvironmentName}RestoreDeletedOrganizationsARN
      ServiceRoleArn:
        'Fn::GetAtt': RestoreDeletedOrganizationsRole.Arn
  RestoreDeletedOrganizationsResolver:
    Type: 'AWS::AppSync::Resolver'
    Properties:
      ApiId:
        'Fn::GetAtt': GraphQLApi.ApiId
      FieldName: restoreDeletedOrganizations
      TypeName: Mutation
      DataSourceName:
        'Fn::GetAtt': RestoreDeletedOrganizationsDataSource.Name
